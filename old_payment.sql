create or replace secure view IE_PROD.FINAL_DATA.PAYMENT_HEALTH_STATS(
	NEW_BLACK_STATION_ID,
	ADYEN_DEVICE_ID,
	BACKENDID,
	ADDRESS,
	NEW_BLACK_DEVICE_NAME,
	NEW_BLACK_STATION_HEALTHY_STATUS,
	ADYEN_HEALTHY_STATUS,
	ISSUE_CATEGORY_ID,
	ISSUE_SUB_CATEGORY_ID,
	SNAPSHOT_TIME,
	ECRID,
	STORE,
	INDICATOR,
	IS_WIRELESS_DEVICE,
	MODEL,
	FIRMWARE_VERSION,
	SERIAL_NUMBER,
	STATUS,
	LASTACTIVITY_AT
) as
WITH RULE_CONFIG AS (
    SELECT RULE_VALUE::NUMBER AS RULE_VALUE 
    FROM DEVICE_RULES 
    WHERE RULE_TYPE = 'ENABLE_ADYEN_NEW_BLACK_FEATURE'
    ORDER BY CREATED_AT DESC
    LIMIT 1
),
NEW_BLACK_DATA AS (
    SELECT 
        NBS.ID AS NEW_BLACK_STATION_ID,
        NULL AS ADYEN_DEVICE_ID,
        NBS.BACKENDID AS BACKENDID,
        NBS.ADDRESS AS ADDRESS,
        NBS.NAME AS NEW_BLACK_DEVICE_NAME,
        CASE 
            WHEN NBS.HEALTHY_STATUS = 'HEALTHY' THEN 'HEALTHY'
            ELSE 'UNHEALTHY'  
        END AS NEW_BLACK_STATION_HEALTHY_STATUS,
        NULL AS ADYEN_HEALTHY_STATUS,
        NBS.ISSUE_CATEGORY_ID AS ISSUE_CATEGORY_ID,
        NBS.ISSUE_SUB_CATEGORY_ID AS ISSUE_SUB_CATEGORY_ID,
        NBS.SNAPSHOT_TIME AS SNAPSHOT_TIME,
        NBS.ECRID AS ECRID,
        NBS.STORE AS STORE,
        NULL AS INDICATOR,
        CASE 
            WHEN NBS.ECRID LIKE 'P400Plus%' THEN FALSE
            ELSE TRUE
        END AS IS_WIRELESS_DEVICE,
        NULL AS MODEL,
        NULL AS FIRMWARE_VERSION,
        NULL AS SERIAL_NUMBER,
        NULL AS STATUS,
        NULL AS LASTACTIVITY_AT
    FROM NEWBLACK_STATIONS NBS
    WHERE SNAPSHOT_TIME = (SELECT MAX(SNAPSHOT_TIME) FROM NEWBLACK_STATIONS)
    AND DEVICE_TYPE = 'PAYMENT'
),
ADYEN_DATA AS (
    SELECT 
        PHI.ID AS NEW_BLACK_STATION_ID,
        PHI.ID AS ADYEN_DEVICE_ID,
        NULL AS BACKENDID,
        NULL AS ADDRESS,
        CONCAT(PHI.STORE_ID,'-',PHI.SERIAL_NUMBER) AS NEW_BLACK_DEVICE_NAME,
        CASE 
            WHEN PHI.INDICATOR = 'GREEN' THEN 'HEALTHY'
            ELSE 'UNHEALTHY'  
        END AS NEW_BLACK_STATION_HEALTHY_STATUS,
        CASE 
            WHEN PHI.INDICATOR = 'GREEN' THEN 'HEALTHY'
            ELSE 'UNHEALTHY'  
        END AS ADYEN_HEALTHY_STATUS,
        NULL AS ISSUE_CATEGORY_ID,
        NULL AS ISSUE_SUB_CATEGORY_ID,
        PHI.SNAPSHOT_TIME AS SNAPSHOT_TIME,
        PHI.ECRID AS ECRID,
        PHI.STORE_ID AS STORE,
        CASE 
            WHEN PHI.INDICATOR = 'GREEN' THEN 'GREEN'
            ELSE 'RED'  
        END AS INDICATOR,
        NULL AS IS_WIRELESS_DEVICE,
        PHI.MODEL AS MODEL,
        PHI.FIRMWARE_VERSION AS FIRMWARE_VERSION,
        PHI.SERIAL_NUMBER AS SERIAL_NUMBER,
        PHI.STATUS AS STATUS,
        PHI.LASTACTIVITY_AT AS LASTACTIVITY_AT
    FROM PAYMENT_HEALTH_INFO PHI
    WHERE SNAPSHOT_TIME = (SELECT MAX(SNAPSHOT_TIME) FROM PAYMENT_HEALTH_INFO)
),
FULL_DATA AS (
    SELECT 
        NBS.ID AS NEW_BLACK_STATION_ID,
        PHI.ID AS ADYEN_DEVICE_ID,
        NBS.BACKENDID AS BACKENDID,
        NBS.ADDRESS AS ADDRESS,
        NBS.NAME AS NEW_BLACK_DEVICE_NAME,
        CASE 
            WHEN NBS.HEALTHY_STATUS = 'HEALTHY' THEN 'HEALTHY'
            ELSE 'UNHEALTHY'  
        END AS NEW_BLACK_STATION_HEALTHY_STATUS,
        CASE 
            WHEN PHI.INDICATOR = 'GREEN' THEN 'HEALTHY'
            ELSE 'UNHEALTHY'  
        END AS ADYEN_HEALTHY_STATUS,
        NBS.ISSUE_CATEGORY_ID AS ISSUE_CATEGORY_ID,
        NBS.ISSUE_SUB_CATEGORY_ID AS ISSUE_SUB_CATEGORY_ID,
        COALESCE(NBS.SNAPSHOT_TIME, PHI.SNAPSHOT_TIME) AS SNAPSHOT_TIME,
        COALESCE(NBS.ECRID, PHI.ECRID) AS ECRID,
        COALESCE(NBS.STORE, PHI.STORE_ID) AS STORE,
        CASE 
            WHEN PHI.INDICATOR = 'GREEN' AND NBS.HEALTHY_STATUS = 'HEALTHY' THEN 'GREEN'
            ELSE 'RED'  
        END AS INDICATOR,
        CASE 
            WHEN COALESCE(NBS.ECRID, PHI.ECRID) LIKE 'P400Plus%' THEN FALSE
            ELSE TRUE
        END AS IS_WIRELESS_DEVICE,
        PHI.MODEL,
        PHI.FIRMWARE_VERSION,
        PHI.SERIAL_NUMBER,
        PHI.STATUS,
        PHI.LASTACTIVITY_AT
    FROM NEWBLACK_STATIONS NBS
    FULL OUTER JOIN PAYMENT_HEALTH_INFO PHI
    ON NBS.ECRID = PHI.ECRID
    WHERE 
        NBS.SNAPSHOT_TIME = (SELECT MAX(SNAPSHOT_TIME) FROM NEWBLACK_STATIONS)
        AND PHI.SNAPSHOT_TIME = (SELECT MAX(SNAPSHOT_TIME) FROM PAYMENT_HEALTH_INFO)
)
SELECT * FROM (
    -- If RULE_VALUE = 0, return only NEW BLACK data
    SELECT * FROM NEW_BLACK_DATA WHERE (SELECT RULE_VALUE FROM RULE_CONFIG) = 0
    UNION ALL
    -- If RULE_VALUE = 1, return only ADYEN data
    SELECT * FROM ADYEN_DATA WHERE (SELECT RULE_VALUE FROM RULE_CONFIG) = 1
    UNION ALL
    -- If RULE_VALUE = 2, return both (FULL OUTER JOIN)
    SELECT * FROM FULL_DATA WHERE (SELECT RULE_VALUE FROM RULE_CONFIG) = 2
) AS FINAL_DATA;